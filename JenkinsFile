pipeline {
    agent any

    environment {
        IMAGE_NAME = "samanth237/my-springboot-app"
        CONTAINER_NAME = "springboot-app"
        EC2_USER = "ec2-user"  // Change to "ubuntu" if using Ubuntu instance
        EC2_HOST = "13.201.103.187"  // Replace with your EC2 public IP
        SSH_KEY = "/Users/samanthgoud/Downloads/sshdemo/demo.pem"
    }

    stages {
        
        stage('Cleanup Workspace') {
            steps {
                script {
                    echo "Cleaning workspace..."
                    sh "rm -rf $WORKSPACE/*"  // Removes all files in the workspace
                    sh "ls -la $WORKSPACE"  // Check if it's clean
                }
            }
        }

        stage('Check Git in Jenkins') {
            steps {
                script {
                    echo "Checking Git installation..."
                    sh "which git"
                    sh "git --version"
                }
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    echo "Cloning repository..."
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/master']],
                        userRemoteConfigs: [[url: 'https://github.com/Samanth237/my-springboot-app.git']],
                        extensions: [[$class: 'CleanBeforeCheckout']]  // Ensures a fresh clone
                    ])
                    sh "ls -la $WORKSPACE"  // Check if repo is cloned
                    sh "cd $WORKSPACE && git status"  // Debugging Git status
                    sh "cd $WORKSPACE && git remote -v"  // Confirm remote URL
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "Building Docker image..."
                    sh "cd $WORKSPACE && docker build -t $IMAGE_NAME ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    echo "Pushing Docker image to Docker Hub..."
                    withDockerRegistry([credentialsId: 'docker-hub-credentials', url: 'https://index.docker.io/v1/']) {
                        sh "docker push $IMAGE_NAME"
                    }
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    echo "Deploying to EC2..."
                    sh """
                        chmod 400 $SSH_KEY
                        ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC2_USER@$EC2_HOST "docker pull $IMAGE_NAME"
                        ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC2_USER@$EC2_HOST "docker stop $CONTAINER_NAME || true"
                        ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC2_USER@$EC2_HOST "docker rm $CONTAINER_NAME || true"
                        ssh -o StrictHostKeyChecking=no -i $SSH_KEY $EC2_USER@$EC2_HOST "docker run -d --name $CONTAINER_NAME -p 8080:8080 $IMAGE_NAME"
                    """
                }
            }
        }
    }
}
